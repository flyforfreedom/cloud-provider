// Code generated by MockGen. DO NOT EDIT.
// Source: Secret.go

// Package k8s is a generated GoMock package.
package k8s

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockSecretOption is a mock of SecretOption interface
type MockSecretOption struct {
	ctrl     *gomock.Controller
	recorder *MockSecretOptionMockRecorder
}

// MockSecretOptionMockRecorder is the mock recorder for MockSecretOption
type MockSecretOptionMockRecorder struct {
	mock *MockSecretOption
}

// NewMockSecretOption creates a new mock instance
func NewMockSecretOption(ctrl *gomock.Controller) *MockSecretOption {
	mock := &MockSecretOption{ctrl: ctrl}
	mock.recorder = &MockSecretOptionMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSecretOption) EXPECT() *MockSecretOptionMockRecorder {
	return m.recorder
}

// apply mocks base method
func (m *MockSecretOption) apply(arg0 *secretOption) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "apply", arg0)
}

// apply indicates an expected call of apply
func (mr *MockSecretOptionMockRecorder) apply(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "apply", reflect.TypeOf((*MockSecretOption)(nil).apply), arg0)
}

// MockSecretInterface is a mock of SecretInterface interface
type MockSecretInterface struct {
	ctrl     *gomock.Controller
	recorder *MockSecretInterfaceMockRecorder
}

// MockSecretInterfaceMockRecorder is the mock recorder for MockSecretInterface
type MockSecretInterfaceMockRecorder struct {
	mock *MockSecretInterface
}

// NewMockSecretInterface creates a new mock instance
func NewMockSecretInterface(ctrl *gomock.Controller) *MockSecretInterface {
	mock := &MockSecretInterface{ctrl: ctrl}
	mock.recorder = &MockSecretInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSecretInterface) EXPECT() *MockSecretInterfaceMockRecorder {
	return m.recorder
}

// GetName mocks base method
func (m *MockSecretInterface) GetName() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetName")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetName indicates an expected call of GetName
func (mr *MockSecretInterfaceMockRecorder) GetName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetName", reflect.TypeOf((*MockSecretInterface)(nil).GetName))
}

// GetData mocks base method
func (m *MockSecretInterface) GetData() (map[string]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetData")
	ret0, _ := ret[0].(map[string]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetData indicates an expected call of GetData
func (mr *MockSecretInterfaceMockRecorder) GetData() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetData", reflect.TypeOf((*MockSecretInterface)(nil).GetData))
}

// UpdateData mocks base method
func (m *MockSecretInterface) UpdateData(data map[string]string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateData", data)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateData indicates an expected call of UpdateData
func (mr *MockSecretInterfaceMockRecorder) UpdateData(data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateData", reflect.TypeOf((*MockSecretInterface)(nil).UpdateData), data)
}

// SetData mocks base method
func (m *MockSecretInterface) SetData(data map[string]string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetData", data)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetData indicates an expected call of SetData
func (mr *MockSecretInterfaceMockRecorder) SetData(data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetData", reflect.TypeOf((*MockSecretInterface)(nil).SetData), data)
}

// DeleteData mocks base method
func (m *MockSecretInterface) DeleteData() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteData")
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteData indicates an expected call of DeleteData
func (mr *MockSecretInterfaceMockRecorder) DeleteData() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteData", reflect.TypeOf((*MockSecretInterface)(nil).DeleteData))
}
